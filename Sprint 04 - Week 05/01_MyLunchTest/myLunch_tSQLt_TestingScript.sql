USE master;
USE myLunch;
GO

EXEC tSQLt.NewTestClass 'testMyLunchQueries';
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 01]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Actual
	EXEC Question1;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Expected
	EXEC Question1_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 02]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Actual
	EXEC Question2;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Expected
	EXEC Question2_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 03]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Actual
	EXEC Question3;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Expected
	EXEC Question3_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 04]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Actual
	EXEC Question4;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Expected
	EXEC Question4_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 05]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Actual
	EXEC Question5;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT
	);

	INSERT INTO Expected
	EXEC Question5_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 06]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT,
		DEPT_CODE_2 VARCHAR(3),
		DEPARTMENT_NAME VARCHAR(30)
	);

	INSERT INTO Actual
	EXEC Question6;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		EMPLOYEE_ID INT,
		FIRST_NAME VARCHAR(10),
		LAST_NAME VARCHAR(20),
		DEPT_CODE VARCHAR(3),
		HIRE_DATE DATE,
		CREDIT_LIMIT DECIMAL(4,2),
		PHONE_NUMBER VARCHAR(4),
		MANAGER_ID INT,
		DEPT_CODE_2 VARCHAR(3),
		DEPARTMENT_NAME VARCHAR(30)
	);

	INSERT INTO Expected
	EXEC Question6_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 07]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		SUPPLIER_ID VARCHAR(3),
		SUPPLIER_NAME VARCHAR(50)
	);

	INSERT INTO Actual
	EXEC Question7;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		SUPPLIER_ID VARCHAR(3),
		SUPPLIER_NAME VARCHAR(50)
	);

	INSERT INTO Expected
	EXEC Question7_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 08]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		WithoutManagers INT
	);

	INSERT INTO Actual
	EXEC Question8;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		WithoutManagers INT
	);

	INSERT INTO Expected
	EXEC Question8_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 09]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		DistinctDates INT
	);

	INSERT INTO Actual
	EXEC Question9;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		DistinctDates INT
	);

	INSERT INTO Expected
	EXEC Question9_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 10]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		DESCRIPTION VARCHAR(50),
		PRICE DECIMAL(4,2)
	);

	INSERT INTO Actual
	EXEC Question10;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		DESCRIPTION VARCHAR(50),
		PRICE DECIMAL(4,2)
	);

	INSERT INTO Expected
	EXEC Question10_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

CREATE PROCEDURE testMyLunchQueries.[TEST QUESTION 11]
AS
BEGIN

	-- STUDENT ANSWER --
	CREATE TABLE Actual (
		DEPT_CODE VARCHAR(3),
		LAST_NAME VARCHAR(20),
		EMPLOYEE_ID INT
	);

	INSERT INTO Actual
	EXEC Question11;
	-- STUDENT ANSWER --

	-- EXPECTED CORRECT ANSWER --

	CREATE TABLE Expected (
		DEPT_CODE VARCHAR(3),
		LAST_NAME VARCHAR(20),
		EMPLOYEE_ID INT
	);

	INSERT INTO Expected
	EXEC Question11_ModelAnswer
	-- EXPECTED CORRECT ANSWER --

	EXEC tSQLt.AssertEqualsTable 'Expected', 'Actual', 'Incorrect Answer!';

END;
GO

EXEC tSQLt.Run 'testMyLunchQueries';